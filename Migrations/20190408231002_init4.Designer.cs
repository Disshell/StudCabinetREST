// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudCabinetREST.Models;

namespace StudCabinetREST.Migrations
{
    [DbContext(typeof(StudDBContext))]
    [Migration("20190408231002_init4")]
    partial class init4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudCabinetREST.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<int>("DirectionId");

                    b.Property<int>("FacultyId");

                    b.Property<int?>("SpecializationId");

                    b.HasKey("ApplicationId");

                    b.HasIndex("ApplicationMainInfoId");

                    b.HasIndex("DirectionId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("StudCabinetREST.Models.ApplicationMainInfo", b =>
                {
                    b.Property<int>("ApplicationMainInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressFact");

                    b.Property<string>("AddressPasport");

                    b.Property<string>("AuthId");

                    b.Property<string>("Birthplace");

                    b.Property<string>("Citizenship");

                    b.Property<DateTime?>("DateOfApplication");

                    b.Property<string>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<bool>("Gender");

                    b.Property<string>("Language");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<bool>("NeedOfHostel");

                    b.Property<int>("PassportId");

                    b.Property<string>("Phone");

                    b.Property<string>("PhoneHome");

                    b.Property<string>("Status");

                    b.Property<string>("Surename");

                    b.HasKey("ApplicationMainInfoId");

                    b.ToTable("ApplicationMainInfo");
                });

            modelBuilder.Entity("StudCabinetREST.Models.CertificateType", b =>
                {
                    b.Property<int>("CertificateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CertificateTypeId");

                    b.ToTable("CertificateType");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Direction", b =>
                {
                    b.Property<int>("DirectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("DirectionId");

                    b.ToTable("Direction");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<int>("CertificateTypeId");

                    b.Property<string>("InstitutionName");

                    b.Property<int>("InstitutionTypeId");

                    b.Property<float>("Point");

                    b.HasKey("EducationId");

                    b.HasIndex("ApplicationMainInfoId");

                    b.HasIndex("CertificateTypeId");

                    b.HasIndex("InstitutionTypeId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<int>("ObjectId");

                    b.Property<int?>("Point");

                    b.HasKey("ExamId");

                    b.HasIndex("ApplicationMainInfoId");

                    b.HasIndex("ObjectId");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("StudCabinetREST.Models.InstitutionType", b =>
                {
                    b.Property<int>("InstitutionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("InstitutionTypeId");

                    b.ToTable("InstitutionType");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Military", b =>
                {
                    b.Property<int>("MilitaryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<string>("City");

                    b.Property<string>("Group");

                    b.Property<string>("Name");

                    b.HasKey("MilitaryId");

                    b.HasIndex("ApplicationMainInfoId")
                        .IsUnique();

                    b.ToTable("Military");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Object", b =>
                {
                    b.Property<int>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ObjectId");

                    b.ToTable("Object");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Passport", b =>
                {
                    b.Property<int>("PassportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<DateTime?>("DateOfIssue");

                    b.Property<string>("Department");

                    b.Property<string>("Number");

                    b.Property<string>("Series");

                    b.HasKey("PassportId");

                    b.HasIndex("ApplicationMainInfoId")
                        .IsUnique();

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Privilege", b =>
                {
                    b.Property<int>("PrivilegeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<string>("Name");

                    b.HasKey("PrivilegeId");

                    b.HasIndex("ApplicationMainInfoId");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationMainInfoId");

                    b.Property<string>("Name");

                    b.HasKey("RewardId");

                    b.HasIndex("ApplicationMainInfoId");

                    b.ToTable("Reward");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Specialization", b =>
                {
                    b.Property<int>("SpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("SpecializationId");

                    b.ToTable("Specialization");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Application", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudCabinetREST.Models.Direction", "Direction")
                        .WithMany("Application")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudCabinetREST.Models.Faculty", "Faculty")
                        .WithMany("Application")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudCabinetREST.Models.Specialization", "Specialization")
                        .WithMany("Application")
                        .HasForeignKey("SpecializationId");
                });

            modelBuilder.Entity("StudCabinetREST.Models.Education", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithMany("Educations")
                        .HasForeignKey("ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudCabinetREST.Models.CertificateType", "CertificateType")
                        .WithMany("Education")
                        .HasForeignKey("CertificateTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudCabinetREST.Models.InstitutionType", "InstitutionType")
                        .WithMany("Education")
                        .HasForeignKey("InstitutionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudCabinetREST.Models.Exam", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithMany("Exams")
                        .HasForeignKey("ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudCabinetREST.Models.Object", "Object")
                        .WithMany("Exam")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudCabinetREST.Models.Military", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithOne("Military")
                        .HasForeignKey("StudCabinetREST.Models.Military", "ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudCabinetREST.Models.Passport", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithOne("Passport")
                        .HasForeignKey("StudCabinetREST.Models.Passport", "ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudCabinetREST.Models.Privilege", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithMany("Privileges")
                        .HasForeignKey("ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudCabinetREST.Models.Reward", b =>
                {
                    b.HasOne("StudCabinetREST.Models.ApplicationMainInfo", "ApplicationMainInfo")
                        .WithMany("Rewards")
                        .HasForeignKey("ApplicationMainInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
